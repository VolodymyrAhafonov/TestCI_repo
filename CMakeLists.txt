cmake_minimum_required(VERSION 2.8.9)
project(Test)
#set(Caffe_include ${CMAKE_SOURCE_DIR}/include)
#set(Caffe_shared_lib /root/Trimaplib/test_dir/libTrimap_NN.so)
#set(Opencv_include /root/Trimaplib/test_dir/3rdparty/install_opencv_static/include)
#set(Opencv_libs_dirs /root/Trimaplib/test_dir/3rdparty/install_opencv_static/lib)
#set(Opecv_3rdparty_libs_dir /root/Trimaplib/test_dir/3rdparty/install_opencv_static/share/OpenCV/3rdparty/lib)

#include_directories(${Caffe_include})
#include_directories(${Opencv_include})

#add_definitions(-DCPU_ONLY)

find_library(G_PROTOBUF protobuf)
message("g_proto is at: ${G_PROTOBUF}")
find_library(G_PROTOC protoc)
message("g_protoc is at: ${G_PROTOC}")
find_library(G_GLOG glog)
message ("g_glog is at: ${G_GLOG}")
find_library(BOOST_FS boost_filesystem)
message ("boost fs at: ${BOOST_FS}")
find_library(BOOST_ST boost_system)
message ("boost_st at: ${BOOST_ST}")
find_library(BOOST_THR boost_thread)
message ("boost_thread at: ${BOOST_THR}")
find_library(OP_BLS openblas)
message ("openblas at: ${OP_BLS}")
find_library(HDF5 hdf5)
message("hdf5 is at: ${HDF5}")
find_library(HDF5_HL hdf5_hl)
message("hdf5_hl is at ${HDF5_HL}")
find_library(GFLAGS gflags)
message("gflags is at: ${GFLAGS}")
find_library(LVLDB leveldb)
message("leveldb is at: ${LVLDB}")
find_library(LMDB lmdb)
message("lmdb is at: ${LMDB}")
find_library(LIBZ z)
message("libz is at: ${LIBZ}")
find_package(Threads)
message("threads is at: ${CMAKE_THREAD_LIBS_INIT}")






#set(SOURCES main.cpp)
#add_executable(Test ${SOURCES})


#TARGET_LINK_LIBRARIES(Test ${Caffe_shared_lib})
#TARGET_LINK_LIBRARIES(Test ${G_PROTOBUF})
#TARGET_LINK_LIBRARIES(Test ${G_PROTOC})
#TARGET_LINK_LIBRARIES(Test ${G_GLOG})
#TARGET_LINK_LIBRARIES(Test ${OpenCV_LIBS})
#TARGET_LINK_LIBRARIES(Test ${BOOST_FS})
#TARGET_LINK_LIBRARIES(Test ${BOOST_ST})
#TARGET_LINK_LIBRARIES(Test ${CMAKE_THREAD_LIBS_INIT})
#TARGET_LINK_LIBRARIES(Test ${BOOST_THR})
#TARGET_LINK_LIBRARIES(Test ${OP_BLS})
#TARGET_LINK_LIBRARIES(Test ${HDF5})
#TARGET_LINK_LIBRARIES(Test ${HDF5_HL})
#TARGET_LINK_LIBRARIES(Test ${GFLAGS})
#TARGET_LINK_LIBRARIES(Test ${LVLDB})
#TARGET_LINK_LIBRARIES(Test ${LMDB})
#TARGET_LINK_LIBRARIES(Test ${LIBZ})
#TARGET_LINK_LIBRARIES(Test ${Opecv_3rdparty_libs_dir}/libIlmImf.a)
#TARGET_LINK_LIBRARIES(Test ${Opecv_3rdparty_libs_dir}/liblibjasper.a)
#TARGET_LINK_LIBRARIES(Test ${Opecv_3rdparty_libs_dir}/liblibjpeg.a)
#TARGET_LINK_LIBRARIES(Test ${Opecv_3rdparty_libs_dir}/liblibpng.a)
#TARGET_LINK_LIBRARIES(Test ${Opecv_3rdparty_libs_dir}/liblibtiff.a)
#TARGET_LINK_LIBRARIES(Test ${Opencv_libs_dirs}/libopencv_core.a)
#TARGET_LINK_LIBRARIES(Test ${Opencv_libs_dirs}/libopencv_imgproc.a)
#TARGET_LINK_LIBRARIES(Test ${Opencv_libs_dirs}/libopencv_highgui.a)
#TARGET_LINK_LIBRARIES(Test ${Opencv_libs_dirs}/libopencv_photo.a)


